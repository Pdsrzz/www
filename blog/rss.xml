<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>JaverVip &amp;&amp; ZhCN Blog</title>
        <link>https://www.javer.vip/blog</link>
        <description>JaverVip &amp;&amp; ZhCN Blog</description>
        <lastBuildDate>Thu, 07 Dec 2023 02:18:56 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hands</language>
        <item>
            <title><![CDATA[OA相关]]></title>
            <link>https://www.javer.vip/blog/OA相关</link>
            <guid>https://www.javer.vip/blog/OA相关</guid>
            <pubDate>Thu, 07 Dec 2023 02:18:56 GMT</pubDate>
            <description><![CDATA[二次入职流程说明]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="二次入职流程说明">二次入职流程说明<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E4%BA%8C%E6%AC%A1%E5%85%A5%E8%81%8C%E6%B5%81%E7%A8%8B%E8%AF%B4%E6%98%8E" class="hash-link" aria-label="二次入职流程说明的直接链接" title="二次入职流程说明的直接链接">​</a></h2>
<ol>
<li>如果身份证对应的账号在员工表存在，并且该数据的员工状态为离职就是二次入职；</li>
<li>导入时有一个是否曾经入职过XX公司的选项，如果是会被认为是二次入职。</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="状态值一览">状态值一览<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E7%8A%B6%E6%80%81%E5%80%BC%E4%B8%80%E8%A7%88" class="hash-link" aria-label="状态值一览的直接链接" title="状态值一览的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="招聘管理">招聘管理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E6%8B%9B%E8%81%98%E7%AE%A1%E7%90%86" class="hash-link" aria-label="招聘管理的直接链接" title="招聘管理的直接链接">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="社招管理">社招管理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E7%A4%BE%E6%8B%9B%E7%AE%A1%E7%90%86" class="hash-link" aria-label="社招管理的直接链接" title="社招管理的直接链接">​</a></h4>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="社招人才管理">社招人才管理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E7%A4%BE%E6%8B%9B%E4%BA%BA%E6%89%8D%E7%AE%A1%E7%90%86" class="hash-link" aria-label="社招人才管理的直接链接" title="社招人才管理的直接链接">​</a></h5>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="二次入职-secondemplist">二次入职 secondEmpList<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E4%BA%8C%E6%AC%A1%E5%85%A5%E8%81%8C-secondemplist" class="hash-link" aria-label="二次入职 secondEmpList的直接链接" title="二次入职 secondEmpList的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_zp_talentpool_resume, 校招社招简历人才库<!-- -->
<ul>
<li>classification = 1, 简历类型(0校招，1社招，2劳务公司)</li>
<li>is_deleted = 0, 是否删除, 0否1是</li>
<li>two_emp = 1, 是否二次入职, 0否1是</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="简历处理">简历处理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E7%AE%80%E5%8E%86%E5%A4%84%E7%90%86" class="hash-link" aria-label="简历处理的直接链接" title="简历处理的直接链接">​</a></h5>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="待处理-untreatedinterview">待处理 untreatedInterview<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%BE%85%E5%A4%84%E7%90%86-untreatedinterview" class="hash-link" aria-label="待处理 untreatedInterview的直接链接" title="待处理 untreatedInterview的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_zp_talentpool_resume, 校招社招简历人才库<!-- -->
<ul>
<li>classification = 1, 简历类型(0校招，1社招，2劳务公司)</li>
<li>stage = 1, 阶段(0:新简历 1:面试 2:拟录用 3:入职 4:黑名单 5:待分配)</li>
<li>resume_status in (0, 200), 简历状态(0未处理 1:已处理)</li>
<li>is_deleted = 0, 是否删除, 0否1是</li>
</ul>
</li>
</ul>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="已处理-szinterview">已处理 szInterview<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%B7%B2%E5%A4%84%E7%90%86-szinterview" class="hash-link" aria-label="已处理 szInterview的直接链接" title="已处理 szInterview的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_zp_interview_evaluation, 面试评价<!-- -->
<ul>
<li>recruitment_type = 1, 招聘类型（0:校招 1:社招）</li>
<li>is_retest = 1, 是否复试 0是  1否</li>
</ul>
</li>
<li>zhkj_zzoa_zp_talentpool_resume, 校招社招简历人才库<!-- -->
<ul>
<li>stage in (1,6,2,3,7), 阶段(0:新简历 1:面试 2:拟录用 3:入职 4:黑名单 5:待分配)</li>
<li>eliminate_blacklist in (0,1,3,4), 淘汰或者黑名单(0:正常 1:淘汰 2:黑名单 3:通过 4:转岗)</li>
<li>is_deleted = 0, 是否删除, 0否1是</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="待入职申请管理">待入职申请管理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%BE%85%E5%85%A5%E8%81%8C%E7%94%B3%E8%AF%B7%E7%AE%A1%E7%90%86" class="hash-link" aria-label="待入职申请管理的直接链接" title="待入职申请管理的直接链接">​</a></h5>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="待申请-waitentrypage">待申请 waitEntryPage<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%BE%85%E7%94%B3%E8%AF%B7-waitentrypage" class="hash-link" aria-label="待申请 waitEntryPage的直接链接" title="待申请 waitEntryPage的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_yg_entry_management, 入职管理表<!-- -->
<ul>
<li>is_deleted = 0, 是否删除, 0否1是</li>
<li>classification IS NOT NULL, 简历类型 0校招  1社招</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="体检管理">体检管理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E4%BD%93%E6%A3%80%E7%AE%A1%E7%90%86" class="hash-link" aria-label="体检管理的直接链接" title="体检管理的直接链接">​</a></h4>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="体检处理">体检处理<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E4%BD%93%E6%A3%80%E5%A4%84%E7%90%86" class="hash-link" aria-label="体检处理的直接链接" title="体检处理的直接链接">​</a></h5>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="待处理-occupationpeoplecontrollerpage">待处理 OccupationPeopleController#page<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%BE%85%E5%A4%84%E7%90%86-occupationpeoplecontrollerpage" class="hash-link" aria-label="待处理 OccupationPeopleController#page的直接链接" title="待处理 OccupationPeopleController#page的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>is_deleted = 0, 是否删除, 0否1是</li>
<li>tj_result = 0, 是否上传 0未上传  1已上传</li>
<li>tj_sure = 0, 是否安排体检0待处理 1待安排 2已安排 3已取消</li>
</ul>
</li>
</ul>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="已处理-occupationpeoplecontrollerpagealready">已处理 OccupationPeopleController#pageAlready<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%B7%B2%E5%A4%84%E7%90%86-occupationpeoplecontrollerpagealready" class="hash-link" aria-label="已处理 OccupationPeopleController#pageAlready的直接链接" title="已处理 OccupationPeopleController#pageAlready的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>tj_sure <code>&lt;&gt;</code> 0, 不等于0, 是否安排体检0待处理 1待安排 2已安排 3已取消</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="体检安排">体检安排<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E4%BD%93%E6%A3%80%E5%AE%89%E6%8E%92" class="hash-link" aria-label="体检安排的直接链接" title="体检安排的直接链接">​</a></h5>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="待安排-occupationpeoplecontrollerpage">待安排 OccupationPeopleController#page<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%BE%85%E5%AE%89%E6%8E%92-occupationpeoplecontrollerpage" class="hash-link" aria-label="待安排 OccupationPeopleController#page的直接链接" title="待安排 OccupationPeopleController#page的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>is_deleted = 0, 是否删除, 0否1是</li>
<li>tj_result = 0, 是否上传 0未上传  1已上传</li>
<li>tj_sure = 1, 是否安排体检0待处理 1待安排 2已安排 3已取消</li>
</ul>
</li>
</ul>
<h6 class="anchor anchorWithStickyNavbar_LWe7" id="已安排-arrangepage">已安排 ArrangePage<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%B7%B2%E5%AE%89%E6%8E%92-arrangepage" class="hash-link" aria-label="已安排 ArrangePage的直接链接" title="已安排 ArrangePage的直接链接">​</a></h6>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>pass is null, 是否通过0合格 1不合格 2复证 合格则待取证</li>
<li>type_status in (0, 1), 0人才库 1员工档案</li>
<li>tj_sure = 2, 是否安排体检0待处理 1待安排 2已安排 3已取消</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="合格-occupationpeoplecontrollerpagestatus">合格 OccupationPeopleController#pageStatus<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%90%88%E6%A0%BC-occupationpeoplecontrollerpagestatus" class="hash-link" aria-label="合格 OccupationPeopleController#pageStatus的直接链接" title="合格 OccupationPeopleController#pageStatus的直接链接">​</a></h5>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>pass = 0, 0合格1不合格2复检</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="复检-occupationpeoplecontrollerpagestatus">复检 OccupationPeopleController#pageStatus<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E5%A4%8D%E6%A3%80-occupationpeoplecontrollerpagestatus" class="hash-link" aria-label="复检 OccupationPeopleController#pageStatus的直接链接" title="复检 OccupationPeopleController#pageStatus的直接链接">​</a></h5>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>pass = 2, 0合格1不合格2复检</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="不合格-occupationpeoplecontrollerpagestatus">不合格 OccupationPeopleController#pageStatus<a href="https://www.javer.vip/blog/OA%E7%9B%B8%E5%85%B3#%E4%B8%8D%E5%90%88%E6%A0%BC-occupationpeoplecontrollerpagestatus" class="hash-link" aria-label="不合格 OccupationPeopleController#pageStatus的直接链接" title="不合格 OccupationPeopleController#pageStatus的直接链接">​</a></h5>
<ul>
<li>zhkj_zzoa_tj_occupation_people, 职业体检人员信息<!-- -->
<ul>
<li>pass = 1, 0合格1不合格2复检</li>
</ul>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[理解 Gorm 的关联模式]]></title>
            <link>https://www.javer.vip/blog/理解 Gorm 的关联模式</link>
            <guid>https://www.javer.vip/blog/理解 Gorm 的关联模式</guid>
            <pubDate>Thu, 07 Dec 2023 02:18:56 GMT</pubDate>
            <description><![CDATA[GORM（Go Object Relational Mapper）是一个用于在Go语言中进行对象关系映射（ORM）的库，它简化了与数据库的交互。在GORM中，"Belongs To"、"Has One"、"Has Many"和"Many To Many"是用于描述不同表之间关系的术语。以下是对这些术语的简要解释和举例：]]></description>
            <content:encoded><![CDATA[<p>GORM（Go Object Relational Mapper）是一个用于在Go语言中进行对象关系映射（ORM）的库，它简化了与数据库的交互。在GORM中，"Belongs To"、"Has One"、"Has Many"和"Many To Many"是用于描述不同表之间关系的术语。以下是对这些术语的简要解释和举例：</p>
<ol>
<li>
<p><strong>Belongs To：</strong></p>
<ul>
<li>
<p>"Belongs To" 表示两个表之间的一对一关系，通常在关联表的一方包含另一表的外键。</p>
</li>
<li>
<p>示例：假设有 <code>User</code> 表和 <code>CreditCard</code> 表，一个用户可能拥有一个信用卡，而信用卡属于某个用户。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> User </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID        </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name      </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CreditCard CreditCard</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> CreditCard </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID     </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Number </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
</li>
<li>
<p><strong>Has One：</strong></p>
<ul>
<li>
<p>"Has One" 也表示两个表之间的一对一关系，但在关联表的一方包含另一表的外键。</p>
</li>
<li>
<p>示例：同上述例子，用户可能拥有一个信用卡，而信用卡只属于一个用户。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> User </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID        </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name      </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CreditCard CreditCard </span><span class="token string" style="color:#e3116c">`gorm:"foreignKey:UserID"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> CreditCard </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID     </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Number </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UserID </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
</li>
<li>
<p><strong>Has Many：</strong></p>
<ul>
<li>
<p>"Has Many" 表示两个表之间的一对多关系，其中一个表的实体可以关联到多个另一表的实体。</p>
</li>
<li>
<p>示例：假设有 <code>User</code> 表和 <code>Order</code> 表，一个用户可以拥有多个订单。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> User </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID     </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name   </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Orders </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">Order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Order </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID       </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    OrderNo  </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UserID   </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
</li>
<li>
<p><strong>Many To Many：</strong></p>
<ul>
<li>"Many To Many" 表示两个表之间的多对多关系，需要通过一个中间表（关联表）来实现。</li>
<li>示例：假设有 <code>Student</code> 表和 <code>Course</code> 表，一个学生可以选修多门课程，一门课程也可以被多名学生选修。<!-- -->
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Student </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID      </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name    </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Courses </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">Course </span><span class="token string" style="color:#e3116c">`gorm:"many2many:student_courses;"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Course </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ID     </span><span class="token builtin">uint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name   </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Students </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">Student </span><span class="token string" style="color:#e3116c">`gorm:"many2many:student_courses;"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
</li>
</ol>
<p>这些示例演示了不同的关系类型，但请注意，GORM提供了强大的灵活性，你可以根据具体需求来定义和调整关系。在使用GORM时，也可以使用 <code>AutoMigrate</code>方法自动生成数据库表结构。</p>]]></content:encoded>
            <category>chatGPT</category>
        </item>
        <item>
            <title><![CDATA[First Blog Post]]></title>
            <link>https://www.javer.vip/blog/2023/11/02/</link>
            <guid>https://www.javer.vip/blog/2023/11/02/</guid>
            <pubDate>Thu, 02 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>